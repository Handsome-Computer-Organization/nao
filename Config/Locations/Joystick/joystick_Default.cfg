// ============= Info of Buttons and Axis: =============
// button 0 = A
// button 1 = B
// button 2 = X
// button 3 = Y
// button 4 = LB
// button 5 = RB
// button 6 = BACK
// V5: button 6 = START
// V6: button 7 = START

// Left Left-Joystick:
// XAxis = axis 1
// YAxis = axis 0

// Left Right-Joystick:
// XAxis = axis 4
// YAxis = axis 3

// Arrow-Keys:
// XAxis = axis 7
// YAxis = axis 6

// Axis LT 2
// Axis RT 5
// =====================================================


// Absolute axis values below this threshold does not cause a motion.
minAxisValue = 0.05;

// The number of avaiable buttons on the joystick.
buttonsCount = 11;

// The number of avaiable axes on the joystick.
axesCount = 8;

// Define axis which controls the walking speed in x-direction. Negative values deactivate x-direction walking control.
walkXAxis = 1; // 7

// Define a second axis which controls the walking speed in x-direction. The values of walkXAxis and additionalWalkXAxis are added, but cut off at max speed.
additionalWalkXAxis = -1; // 7

// Define axis which controls the walking speed in y-direction. Negative values deactivate y-direction walking control.
walkYAxis = 0; // 6

// Define axis which controls the rotational walking speed. Negative values deactivate rotational walking control.
walkRotAxis = -1; // 0

// Define two axes which controls together the rotational walking speed. If walkRotAxis is valid, this axis is ignored.
walkRotLeftAxis = 2;

// Define two axes which controls together the rotational walking speed. If walkRotAxis is valid, this axis is ignored.
walkRotRightAxis = 5;

// Define axis which controls the head pan. Negative values deactivate head pan control.
headPanAxis = 3;

// Define axis which controls the head tilt. Negative values deactivate head tilt control.
headTiltAxis = 4;

// Define button which triggers the robot to stand up (same as chest button).
startButton = 7; // V5 == 6, V6 == 7

// Define Button for back Button
backButton = 6; // V5 == 7, V6 == 6

// Define button which triggers a kick with the left foot.
leftKickButton = 4;

// Define button which triggers a kick with the right foot.
rightKickButton = 5;

// Define a list of special actions and button ids. The button in each of the elements triggers the related special action.
specialActions = [
  { specialAction = {specialAction = cheering1; mirror = false;}; button = 0; duration = 7400; },
  { specialAction = {specialAction = wave_left; mirror = false;}; button = 1; duration = 6500; },
  { specialAction = {specialAction = cheering4; mirror = false;}; button = 2; duration = 6000; },
  { specialAction = {specialAction = cheering5; mirror = false;}; button = 3; duration = 3900; },
  //{ specialAction = {specialAction = dance1; mirror = false;}; button = 10; duration = 6600; },
  //{ specialAction = {specialAction = dance2; mirror = false;}; button = 6; duration = 19100; },
];

// CustomStep axis
customStepXAxis = 7;

customStepYAxis = 6;

// Active CustomSteps which should be triggered via Joystick:

//Up Key
//  stateValueX: -1
//  stateValueY: 0

//Right key
//  stateValueX: 0
//  stateValueY: 1

//Down key
//  stateValueX: 1
//  stateValueY: 0

//Left key:
//  stateValueX: 0
//  stateValueY: -1

activeKicks = [
  { stepRequest = none; stateValueX = -1; stateValueY = 0; duration = 0; mirror = false;},
  { stepRequest = frontKickLong; stateValueX = 0; stateValueY = 1; duration = 5; mirror = true;},
  { stepRequest = none; stateValueX = 1; stateValueY = 0; duration = 0; mirror = false;},
  { stepRequest = frontKickLong; stateValueX = 0; stateValueY = -1; duration = 5; mirror = false;},
];
